{
    "fileTypes": [
        "sc",
        "scd",
        "quark"
      ],
      "foldingStartMarker": "\\{|\\/\\*|^\\(",
      "foldingStopMarker": "\\}|\\*\\/|^\\)",
      "name": "SuperCollider",
      "repository": {

        "numeric": {
          "patterns": [
            {
              "comment": "source: ruby bundle",
              "match": "\\b(0[xX][0-9A-Fa-f](?>_?[0-9A-Fa-f])*|\\d(?>_?\\d)*(\\.(?![^[:space:][:digit:]])(?>_?\\d)*)?([eE][-+]?\\d(?>_?\\d)*)?|0[bB][01]+)\\b",
              "name": "constant.numeric.supercollider"
            }
          ]
        },

        "environmentVariable": {
          "patterns": [
            {
              "name": "variable.environment.supercollider",
              "match": "~[a-z][A-Za-z0-9_]*\\b"
            }
          ]
        },

        "variable": {
          "patterns": [
            {
              "name": "variable.supercollider",
              "match": "([a-z][a-zA-Z0-9_]*)\\b"
            }
          ]
        },

        "class": {
          "patterns": [
            {
              "captures": {
                "1": {
                  "name": "entity.name.class.supercollider"
                }
              },
              "comment": "[^a-zA-Z0-9\\\\]([A-Z_]{1}[a-zA-Z0-9_]*)[^a-zA-Z0-9_]",
              "match": "\\b([A-Z_]{1}[a-zA-Z0-9_]*)[^a-zA-Z0-9_]"
            }
          ]
        }                  
      },
      "patterns": [
        {
          "name": "keyword.control.supercollider",
          "match": "\\b(arg|var|classvar|const|this|thisThread|thisMethod|thisFunction|thisProcess|currentEnvironment|true|false|inf|nil)\\b"
        },
        {
          "name": "keyword.operator.supercollider",
          "match": "\\b(\\*|\/|\\\\|\\+|\\-|<|>|\\||@|\\?|\\!)+\\b"
        },

        { 
          "begin": "\"",
          "end": "\"",
          "name": "string.quoted.double.supercollider",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.supercollider"
            }
          ]
        },

        {
          "begin": "'",
          "end": "'",
          "name": "entity.name.symbol.supercollider",
          "patterns": [
            {
              "match": "\\\\.",
              "name": "constant.character.escape.supercollider"
            }
          ]
        },
        {
          "match": "\\\\[a-zA-Z0-9_]+",
          "name": "entity.name.symbol.supercollider"
        },

        {
          "captures": {
            "1": {
              "name": "entity.name.symbol.supercollider"
            }
          },
          "match": "([a-z][a-zA-Z0-9_]*)\\s*\\:"
        },
        
        {
          "captures": {
            "1": {
              "name": "entity.name.class.supercollider"
            }
          },
          "match": "^\\s*\\+*\\s*([A-Z]{1}[a-zA-Z0-9_]*)\\s*\\:{1}\\s*([A-Z]{1}[a-zA-Z0-9_]*)\\s*\\{"
        },

        {
          "captures": {
            "1": {
              "name": "entity.name.class.supercollider"
            }
          },
          "match": "([A-Z]{1}[a-zA-Z0-9_]*)[^a-zA-Z0-9_]"
        },

        {
          "match": "\\|[a-zA-Z0-9\\#\\[\\]\\\"\\_\\=\\.\\(\\)[[:space:]]\\,]+\\|",
          "name": "variable.parameter.function.supercollider"
        },
        {
          "captures": {
            "1": {
              "name": "entity.name.function.supercollider"
            }
          },
          "match": "^\\s*(\\**[a-z]{1}[a-zA-Z0-9_]+)\\s*\\{"
        },
        {
          "include": "#class"
        },
        {
          "include": "#variable"
        },
        {
          "include": "#environmentVariable"
        },
        {
          "include": "#numeric"
        },
        {
          "match": "\\/\\/.*",
          "name": "comment.single.supercollider"
        },
        {
          "begin": "\\/\\*",
          "end": "\\*\\/",
          "name": "comment.multiline.supercollider"
        }
      ],
      "scopeName": "source.supercollider"
}